{"version":3,"sources":["mockData/recipes.js","actions/recipes.js","components/AddIngredientModal.js","components/EditIngredientModal.js","components/IngredientsPage.js","components/AddDirectionModal.js","components/EditDirectionModal.js","components/DirectionsPage.js","actions/specials.js","components/SpecialsPage.js","components/AddRecipeModal.js","components/EditRecipeModal.js","components/Home.js","reducers/recipes.js","reducers/specials.js","reducers/index.js","state/store.js","App.js","index.js"],"names":["mockRecipes","recipes","uuid","title","description","images","full","medium","small","servings","prepTime","cookTime","postDate","editDate","ingredients","amount","measurement","name","directions","instructions","optional","specials","ingredientId","type","geo","text","code","GET_RECIPES_SUCCESS","ADD_RECIPE","GET_CURRENT_RECIPE_SUCCESS","UPDATE_INGREDIENT","ADD_NEW_INGREDIENT","UPDATE_DIRECTION","ADD_NEW_DIRECTION","UPDATE_RECIPE","getCurrentRecipe","recipeId","dispatch","getState","recipe","currentRecipe","recipesList","filter","getRecipesSuccess","useStyles","makeStyles","theme","root","flexGrow","form","margin","spacing","width","borderTop","borderRight","borderLeft","paddingBottom","marginLeft","marginTop","padding","closeButton","position","right","top","color","palette","grey","AddIngredient","props","classes","onClose","open","useState","setName","setAmount","setMeasurement","handleClose","useDispatch","Dialog","maxWidth","fullWidth","aria-labelledby","DialogTitle","id","Typography","variant","IconButton","aria-label","className","onClick","icon_padding","Close","noValidate","autoComplete","InputLabel","TextField","placeholder","onChange","e","target","value","Box","mb","ml","pb","Button","newIngredient","uuidv4","ingredient","size","paper","height","EditIngredient","currentIngredient","useEffect","moment","format","specialsButton","navButtonContainer","marginRight","gridList","flexWrap","overflow","paddingTop","ingredientsList","display","flexDirection","justifyContent","card","alignSelf","backgroundColor","Ingredients","history","useHistory","useParams","setOpen","openForEdit","setOpenForEdit","setCurrentIngredient","useSelector","state","Fragment","AppBar","Toolbar","push","map","tile","index","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","disableSpacing","handleClickEditOpen","addRecipeButton","AddDirection","setOptional","instruction","setInstruction","React","openOptions","setOptionsOpen","TextareaAutosize","rowsMax","FormControl","Select","labelId","onOpen","MenuItem","direction","EditDirection","currentDirection","directionIndex","menuButton","left","directionsList","directionsInstruction","fontSize","directionsOptional","Directions","setCurrentDirection","currentDirectionIndex","setCurrentDirectionIndex","GET_SPECIALS_SUCCESS","getSpecials","boldText","fontWeight","specialsTitle","specialsList","Specials","classNane","imageTextField","AddRecipe","setTitle","setDescription","setServings","setPrepTime","setCookTime","image","setImage","setIngredients","setDriections","Grid","justify","container","item","xs","label","inputProps","step","data","arr","formInstruction","formDirection","dateAndTime","newRecipe","EditRecipe","textAlign","secondary","media","App","setCurrentRecipe","loadRecipes","CardMedia","src","foodItem","pathname","initialState","recipesReducer","action","produce","draft","loading","recipeIndex","findIndex","ingredientIndex","updateIngredientsIndex","newIngredientsIndex","updateDirectionsIndex","newDirectionsIndex","specialsReducer","rootReducer","combineReducers","persistConfig","key","storage","rLogger","createLogger","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","basename","process","exact","path","Home","render","document","querySelector"],"mappings":"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","file":"static/js/main.0736a2ed.chunk.js","sourcesContent":["export const mockRecipes = {\n  recipes: [\n    {\n      uuid: \"e80ea521-4d42-48fe-a7a6-ac8952bc0de4\",\n      title: \"Queso Brat Scramble\",\n      description: \"A delicious breakfast, fit for a crowd.\",\n      images: {\n        full: \"/img/queso_brat_scramble.jpg\",\n        medium:\n          \"https://lh3.googleusercontent.com/KTToql6W8SkbvOD9hosyHJ2x70B_muQSWrBcxt7_tmK73OowbpHIdw7GxdyBP75J2-U85jKtgzHcOK1wSR2CKQ=w1280-h1280-c-rw-v1-e365\",\n        small: \"/img/queso_brat_scramble--s.jpg\",\n      },\n      servings: 5,\n      prepTime: 10,\n      cookTime: 20,\n      postDate: \"01/20/2018 05:15:03 PM\",\n      editDate: \"02/05/2018 11:56:29 PM\",\n      ingredients: [\n        {\n          uuid: \"62798278-2fbc-4c31-98de-b7959c191688\",\n          amount: 1,\n          measurement: \"package (19 oz)\",\n          name: \"queso brats\",\n        },\n        {\n          uuid: \"2df619ea-8472-48f4-9615-3f387a492d22\",\n          amount: 8,\n          measurement: \"tablespoons\",\n          name: \"canola oil\",\n        },\n        {\n          uuid: \"fee4a89c-8c27-4073-9055-a0b052a1c079\",\n          amount: 4,\n          measurement: \"\",\n          name: \"corn tortillas, cut into 1/2-inch squares\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 0.5,\n          measurement: \"\",\n          name: \"small red onion, diced\",\n        },\n        {\n          uuid: \"41785201-9596-4ebc-b8ea-1feb562ebc53\",\n          amount: 1,\n          measurement: \"\",\n          name: \"small red pepper, diced\",\n        },\n        {\n          uuid: \"34918edd-b5fd-475c-9a13-364632971938\",\n          amount: 1,\n          measurement: \"\",\n          name: \"jalapeno pepper, seeded and chopped\",\n        },\n        {\n          uuid: \"75fe2545-4053-40bd-9c4f-150b61a052fb\",\n          amount: 2,\n          measurement: \"cloves\",\n          name: \"garlic, minced\",\n        },\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 8,\n          measurement: \"\",\n          name: \"eggs\",\n        },\n        {\n          uuid: \"7fbce07e-b640-4f36-8a7f-d094dc04d7d2\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"half-and-half cream\",\n        },\n        {\n          uuid: \"cdfa1350-3190-46b5-8f4d-4dfdadee7e39\",\n          amount: 1.5,\n          measurement: \"teaspoons\",\n          name: \"chili powder\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.5,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"885293b6-50ae-4ffd-b6d4-32b795d96031\",\n          amount: 5,\n          measurement: \"dashes\",\n          name: \"hot sauce, more to taste\",\n        },\n        {\n          uuid: \"da6965ac-b6c4-4715-b3d5-2a24f236650a\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"halved grape tomatoes\",\n        },\n        {\n          uuid: \"5f79e3c0-f214-4226-a660-1049778355a8\",\n          amount: 0.5,\n          measurement: \"cup\",\n          name: \"canned black beans, rinsed and drained\",\n        },\n        {\n          uuid: \"86c9eb8e-3ff6-4d4f-83d7-ea4d9f1ae455\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"pepper jack cheese, shredded\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"Cook brats according to package directions. Cool slightly and halve and slice.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a large skillet, over medium heat, heat 1/2 cup oil in a skillet, add tortilla squares; fry until crisp.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"With a slotted spoon remove tortilla to a paper-towel lined plate to drain.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In another skillet, sauté the onion, pepper, jalapeno and garlic in the remaining 1 tablespoon oil.\",\n          optional: false,\n        },\n        {\n          instructions: \"Remove from pan and keep warm.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a bowl, combine the eggs, cream, chili powder, salt and hot sauce. \",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Pour into skillet; cook, stirring occasionally until set.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Add the brats, tomatoes, black beans and tortillas; heat through.\",\n          optional: false,\n        },\n        {\n          instructions: \"Sprinkle with cheese.\",\n          optional: true,\n        },\n        {\n          instructions: \"Serve immediately.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"7f8e872d-47a5-44e6-b1ad-7b7cb94f1d30\",\n      title: \"Italian Meatballs\",\n      description: \"Quick, easy and authentic.\",\n      images: {\n        full: \"/img/italian_meatballs.jpg\",\n        medium:\n          \"https://www.jocooks.com/wp-content/uploads/2012/11/italian-meatballs-1-2-1.jpg\",\n        small: \"/img/italian_meatballs--s.jpg\",\n      },\n      servings: 6,\n      prepTime: 25,\n      cookTime: 20,\n      postDate: \"02/19/2018 12:47:42 AM\",\n      editDate: \"02/19/2018 01:12:05 AM\",\n      ingredients: [\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 1,\n          measurement: \"\",\n          name: \"egg, lightly beaten\",\n        },\n        {\n          uuid: \"6d5dce01-b305-4df1-875e-1354a048bcea\",\n          amount: 0.333,\n          measurement: \"cup\",\n          name: \"dry bread crumbs\",\n        },\n        {\n          uuid: \"0c62dd1d-7b0f-4471-ba06-df220177ae39\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"parmesan cheese, grated\",\n        },\n        {\n          uuid: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"milk\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"onion, finely chopped\",\n        },\n        {\n          uuid: \"62798278-2fbc-4c31-98de-b7959c191688\",\n          amount: 1.25,\n          measurement: \"lbs\",\n          name: \"ground italian sausage\",\n        },\n      ],\n      directions: [\n        {\n          instructions: \"Preheat oven to 350°F.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a large bowl, combine the egg, bread crumbs, grated parmesan cheese, milk and onion.\",\n          optional: false,\n        },\n        {\n          instructions: \"Add sausage to the bread crumb mixture and mix well.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Shape into 20 meatballs; arrange on a shallow baking pan.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Bake for 20 minutes or until meatballs are cooked through (160°F).\",\n          optional: false,\n        },\n        {\n          instructions: \"Serve with your favorite sauce and spaghetti.\",\n          optional: true,\n        },\n      ],\n    },\n    {\n      uuid: \"3555aec3-47e1-44d4-b8f2-607aad5cee67\",\n      title: \"Kielbasa Skillet\",\n      description: \"A polish delicacy.\",\n      images: {\n        full: \"/img/kielbasa_skillet.jpg\",\n        medium:\n          \"https://iamhomesteader.com/wp-content/uploads/2022/02/roasted-potato-kielbasa.jpg\",\n        small: \"/img/kielbasa_skillet--s.jpg\",\n      },\n      servings: 8,\n      prepTime: 20,\n      cookTime: 20,\n      postDate: \"03/12/2018 01:51:12 PM\",\n      editDate: \"03/15/2018 04:14:03 PM\",\n      ingredients: [\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 1,\n          measurement: \"package (13.5 oz)\",\n          name: \"kielbasa sausage\",\n        },\n        {\n          uuid: \"6d5dce01-b305-4df1-875e-1354a048bcea\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"carrot, sliced into small chunks\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 1,\n          measurement: \"\",\n          name: \"large onion, coarsely chopped\",\n        },\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 2,\n          measurement: \"tablespoons\",\n          name: \"butter\",\n        },\n        {\n          uuid: \"efdc9267-cfbb-4e3e-90e2-1fe7287ed4e6\",\n          amount: 1,\n          measurement: \"\",\n          name: \"small head of cabbage, cut into wedges\",\n        },\n        {\n          uuid: \"e616c374-ed92-4b99-81c2-f73d180601e8\",\n          amount: 0.5,\n          measurement: \"teaspoon\",\n          name: \"dried thyme\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"5fc6a47f-7ef4-48ab-a5d9-384417dc63cf\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"black pepper\",\n        },\n        {\n          uuid: \"da4df371-eb5d-44f6-905c-6c10255b24b4\",\n          amount: 2,\n          measurement: \"packages (24 oz each)\",\n          name: \"refrigerated prepared mashed potatoes\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"In a large skillet, sauté sausage, carrot, and onion in butter until onion is tender.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Add the cabbage, thyme, salt, and pepper. Reduce heat; simmer, covered 14-16 minutes or until cabbage is tender.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Meanwhile, heat potatoes according to package directions.\",\n          optional: false,\n        },\n        {\n          instructions: \"Serve with sausage mixture.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"3555aec3-47e1-44d4-b8f2-607aad5cee69\",\n      title: \"Brussel Chips\",\n      description: \"Tasty, crispy, spicy and healthy!\",\n      images: {\n        full: \"/img/brussel_chips.jpg\",\n        medium:\n          \"https://www.saveur.com/uploads/2019/03/18/WDXMZ7OD2CTZUJO2QJ2SEVCRYM.jpg?auto=webp\",\n        small: \"/img/brussel_chips--s.jpg\",\n      },\n      servings: 4,\n      prepTime: 15,\n      cookTime: 25,\n      postDate: \"03/28/2018 01:27:51 AM\",\n      editDate: \"03/30/2018 05:51:52 PM\",\n      ingredients: [\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 2,\n          measurement: \"tablespoons\",\n          name: \"butter\",\n        },\n        {\n          uuid: \"86b9842d-3025-4d27-82aa-459ef4f8ab7f\",\n          amount: 1.5,\n          measurement: \"teaspoons\",\n          name: \"dijon mustard\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"3d6ee987-8ffd-479c-88e0-e3eca690704f\",\n          amount: 1,\n          measurement: \"pinch\",\n          name: \"red pepper flakes\",\n        },\n        {\n          uuid: \"95e5a38d-26db-4e90-9773-d6be11a280df\",\n          amount: 1,\n          measurement: \"pound\",\n          name: \"brussel sprouts\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"Place a rack in top position of your oven and preheat to 325 F.\",\n          optional: false,\n        },\n        {\n          instructions: \"Line a baking sheet with aluminum foil.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Trim the stems of the Brussels sprouts to release outermost leaves, about 5 leaves from each sprout.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Place leaves in the bowl of sauce; toss with your fingers until all the leaves are evenly coated.\",\n          optional: false,\n        },\n        {\n          instructions: \"Spread leaves on the baking sheet in a single layer.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Roast leaves in the preheated oven until wilted and lightly browned, about 15 minutes. Transfer any crispy leaves to a serving plate and continue roasting, removing crispy leaves at 5-minute intervals, until all leaves are crispy, about 10 minutes more.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"f8fc88dc-2f89-43fa-b431-00d90eeba521\",\n      title: \"Pancake Mountain\",\n      description: \"A giant stack of pancakes to share or to horde.\",\n      images: {\n        full: \"/img/pancake_mountain.jpg\",\n        medium:\n          \"https://www.visitglenarbor.com/wp-content/uploads/2023/02/Pancakes-SQ_8FCDABA8-5056-BF65-D63C6D0E8356400D_8fce6d5c-5056-bf65-d67b4080febc7caa-1.jpg\",\n        small: \"/img/pancake_mountain--s.jpg\",\n      },\n      servings: 8,\n      prepTime: 15,\n      cookTime: 20,\n      postDate: \"04/14/2018 07:28:54 PM\",\n      editDate: \"04/17/2018 03:20:16 PM\",\n      ingredients: [\n        {\n          uuid: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n          amount: 1.5,\n          measurement: \"cups\",\n          name: \"milk\",\n        },\n        {\n          uuid: \"d4fbd3ee-add4-4e86-b8bb-898a97d5be78\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"white vinegar\",\n        },\n        {\n          uuid: \"811a6f12-428e-4110-abcd-508e4080bc5c\",\n          amount: 2,\n          measurement: \"cups\",\n          name: \"all-purpose flour\",\n        },\n        {\n          uuid: \"28ed1238-648b-4559-a83c-5a2fb5f4ad25\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"white sugar\",\n        },\n        {\n          uuid: \"698345bd-078d-495f-b233-df1b756dd8a7\",\n          amount: 2,\n          measurement: \"teaspoons\",\n          name: \"baking powder\",\n        },\n        {\n          uuid: \"6d4176cc-0c48-4e19-9d38-bb16578423a4\",\n          amount: 1,\n          measurement: \"teaspoon\",\n          name: \"baking soda\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 1,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 2,\n          measurement: \"\",\n          name: \"eggs\",\n        },\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"butter, melted\",\n        },\n        {\n          uuid: \"c8be68ed-d83b-4e6c-ba7a-082d3dc167f4\",\n          amount: null,\n          measurement: \"\",\n          name: \"cooking spray\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            'Combine milk with vinegar in a medium bowl and set aside for 5 minutes to \"sour\".',\n          optional: false,\n        },\n        {\n          instructions:\n            'Combine flour, sugar, baking powder, baking soda, and salt in a large mixing bowl. Whisk egg and butter into \"soured\" milk. Pour the flour mixture into the wet ingredients and whisk until lumps are gone.',\n          optional: false,\n        },\n        {\n          instructions:\n            \"Heat a large skillet over medium heat, and coat with cooking spray. Pour 1/4 cupfuls of batter onto the skillet, and cook until bubbles appear on the surface. Flip with a spatula, and cook until browned on the other side.\",\n          optional: false,\n        },\n      ],\n    },\n  ],\n  specials: [\n    {\n      uuid: \"233d8582-141a-460d-b7e1-d623afd69e7d\",\n      ingredientId: \"62798278-2fbc-4c31-98de-b7959c191688\",\n      type: \"event\",\n      title: \"Bratmas Party\",\n      geo: \"43.032446,-87.908098\",\n      text: \"Join us at Sweet Diner for this Special Holiday Event!\",\n    },\n    {\n      uuid: \"3c1aa6a4-802f-4f34-a232-bfd4d975f7b1\",\n      ingredientId: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n      type: \"local\",\n      title: \"1 Dozen, 1 Dollar\",\n      geo: \"43.044842,-87.904140\",\n      text: \"Eggs are on sale at a grocery store near you!\",\n    },\n    {\n      uuid: \"8f730f08-5ea5-48fb-bfd7-6a28337efc28\",\n      ingredientId: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n      type: \"promocode\",\n      code: \"GETMILK\",\n      title: \"$1 off Milk\",\n      text: \"Use the promocode GETMILK on Peapod and receive $1 off your next gallon!\",\n    },\n    {\n      uuid: \"c6912eeb-f686-482d-8bf4-c118510a4069\",\n      ingredientId: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n      type: \"sale\",\n      title: \"Eriksens Hand Rolled Butter\",\n      text: \"Flash this recipe at a Roundy's near you and get 10% off Eriksens Hand Rolled Butter, salted or unsalted.\",\n    },\n  ],\n};\n","import { mockRecipes } from \"./../mockData/recipes\";\n\nexport const GET_RECIPES_SUCCESS = \"GET_RECIPES_SUCCESS\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\n\nexport const SAVE_CURRENT_RECIPE_SUCCESS = \"SAVE_CURRENT_RECIPE_SUCCESS\";\nexport const GET_CURRENT_RECIPE_SUCCESS = \"GET_CURRENT_RECIPE_SUCCESS\";\n\nexport const UPDATE_INGREDIENT = \"UPDATE_INGREDIENT\";\nexport const UPDATE_INGREDIENT_SUCCESS = \"UPDATE_INGREDIENT_SUCCESS\";\nexport const ADD_NEW_INGREDIENT = \"ADD_NEW_INGREDIENT\";\nexport const UPDATE_DIRECTION = \"UPDATE_DIRECTION\";\n\nexport const ADD_NEW_DIRECTION = \"ADD_NEW_DIRECTION\";\nexport const UPDATE_RECIPE = \"UPDATE_RECIPE\";\n\n//get all recipes\nexport function getRecipes() {\n  return getRecipesSuccess(mockRecipes.recipes);\n\n  // Always use upsert for both inserts and modifies\n  // mockRecipes={title:'pancakes', description: 'hot pancakes ready to be served', servings:1,prepTime:1,cookTime:1, ingredients:[], directions:[]}\n  // console.log(\n  //   \"animals\",\n  //   db.recipes.find().fetch((res) => res)\n  // );\n  // const recipesLen = db.recipes;\n  // if (recipesLen) {\n\n  // }\n\n  // return axios\n  //   .get(\"http://localhost:3001/recipes\")\n  //   .then(({ data }) => {\n  //     console.log(\"old data\", data);\n  //      dispatch(getRecipesSuccess(data));\n  //   })\n  //   .catch((err) => {\n  //     dispatch({ type: \"GET_RECIPE_FAILURE\", err });\n  //   });\n}\n\n//get the current recipe by ID\nexport function getCurrentRecipe(recipeId) {\n  return function (dispatch, getState) {\n    let currentRecipe = {};\n    const recipes = getState().recipes.recipesList;\n    if (recipes) {\n      // get current recipe from state\n      currentRecipe = recipes.filter((recipe) => recipe.uuid === recipeId);\n    } else {\n      currentRecipe = mockRecipes.recipes.filter(\n        (recipe) => recipe.uuid === recipeId\n      );\n\n      //get current recipe from mock data\n    }\n\n    dispatch(getCurrentRecipeSuccess(currentRecipe[0]));\n\n    // Success:\n    // Query dog (with no query options beyond a selector)\n\n    // return axios\n    //   .get(`http://localhost:3001/recipes/${recipeId}`)\n    //   .then(({ data }) => {\n    //     dispatch(getCurrentRecipeSuccess(data));\n    //   });\n  };\n}\n\nexport function loadRecipes(recipes) {\n  return getRecipesSuccess(recipes);\n}\nexport function updateRecipe(recipe) {\n  return {\n    type: UPDATE_RECIPE,\n    recipe,\n  };\n}\n\nexport function saveCurrentRecipe() {\n  return function (dispatch, getState) {\n    // const recipe = getState().recipes.currentRecipe;\n    // const recipes = getState().recipes.recipesList;\n    // whatever action that updates currentRecipes needs to update Recipes\n  };\n  //   return axios\n  //     .put(`http://localhost:3001/recipes/${recipe.uuid}`, recipe)\n  //     .then(({ data }) => dispatch(saveCurrentRecipeSuccess(data)));\n  // };\n}\n\n// export function postNewRecipe(newRecipe) {\n//   return function (dispatch) {\n//     dispatch(addRecipe(newRecipe));\n//     return axios\n//       .post(`http://localhost:3001/recipes`, newRecipe)\n//       .then(({ data }) => dispatch(saveCurrentRecipeSuccess(data)));\n//   };\n// }\n\nexport function updateIngredient(ingredient) {\n  return {\n    type: UPDATE_INGREDIENT,\n    ingredient,\n  };\n}\nexport function updateDirection(direction, directionIndex) {\n  return {\n    type: UPDATE_DIRECTION,\n    direction,\n    directionIndex,\n  };\n}\nexport function addNewIngredient(ingredient) {\n  return {\n    type: ADD_NEW_INGREDIENT,\n    ingredient,\n  };\n}\nexport function addNewDirection(direction) {\n  return {\n    type: ADD_NEW_DIRECTION,\n    direction,\n  };\n}\n\nexport function addRecipe(recipe) {\n  return {\n    type: ADD_RECIPE,\n    recipe,\n  };\n}\n\nfunction getRecipesSuccess(recipes) {\n  return {\n    type: GET_RECIPES_SUCCESS,\n    recipes,\n  };\n}\n\nexport function getCurrentRecipeSuccess(recipe) {\n  return {\n    type: GET_CURRENT_RECIPE_SUCCESS,\n    recipe,\n  };\n}\n\nexport function saveCurrentRecipeSuccess(recipe) {\n  return {\n    type: SAVE_CURRENT_RECIPE_SUCCESS,\n    recipe,\n  };\n}\nexport function resetRecipes() {\n  return getRecipesSuccess(mockRecipes.recipes);\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  makeStyles,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addNewIngredient, saveCurrentRecipe } from \"../actions/recipes\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction AddIngredient(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"\");\n\n  //close modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  //add ingredient\n  function addIngredient() {\n    const newIngredient = {\n      uuid: uuidv4(),\n      amount: amount,\n      name: name,\n      measurement: measurement,\n    };\n\n    dispatch(addNewIngredient(newIngredient));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"add-ingredient\"\n      open={open}\n    >\n      <DialogTitle id=\"add-ingredient\">\n        <Typography variant=\"h6\"> Add Ingredient </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"name\">Name</InputLabel>\n          <TextField\n            id=\"name\"\n            placeholder=\"Enter the amount of servings\"\n            onChange={handleNameChange}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <TextField\n            id=\"measurement\"\n            placeholder=\"Enter the meausrement\"\n            onChange={handleMeasurementChange}\n          />\n          <InputLabel id=\"amount\">Amount</InputLabel>\n          <TextField\n            id=\"amount\"\n            type=\"number\"\n            placeholder=\"Enter the amount\"\n            onChange={handleAmountChange}\n          />\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={addIngredient}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Ingredient\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddIngredient;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Box,\n  makeStyles,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport { updateIngredient, saveCurrentRecipe } from \"../actions/recipes\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 90,\n    marginTop: 50,\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction EditIngredient(props) {\n  const classes = useStyles();\n  const { onClose, open, currentIngredient } = props;\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(currentIngredient.name);\n  const [measurement, setMeasurement] = useState(currentIngredient.measurement);\n  const [amount, setAmount] = useState(currentIngredient.amount);\n\n  useEffect(() => {\n    //get recipes for state\n    setName(currentIngredient.name);\n    setMeasurement(currentIngredient.measurement);\n    setAmount(currentIngredient.amount);\n  }, [\n    currentIngredient.name,\n    currentIngredient.measurement,\n    currentIngredient.amount,\n  ]);\n\n  // close modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  function editItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //new ingredient with form data\n\n    const newIngredient = {\n      uuid: currentIngredient.uuid,\n      amount: amount,\n      name: name,\n      measurement: measurement,\n    };\n\n    //update ingredient in redux\n    dispatch(updateIngredient(newIngredient));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-ingredient\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-ingredient\">\n        <Typography variant=\"h6\"> Edit Ingredient </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"name\">Name</InputLabel>\n          <TextField\n            id=\"name\"\n            placeholder=\"Enter the amount of servings\"\n            onChange={handleNameChange}\n            value={name}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <TextField\n            id=\"measurement\"\n            placeholder=\"Enter the meausrement\"\n            onChange={handleMeasurementChange}\n            value={measurement}\n          />\n          <InputLabel id=\"amount\">Amount</InputLabel>\n          <TextField\n            id=\"amount\"\n            type=\"number\"\n            placeholder=\"Enter the amount\"\n            onChange={handleAmountChange}\n            value={amount}\n          />\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Finished Editing\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditIngredient;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  Card,\n  CardActions,\n  CardContent,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AddIngredient from \"./AddIngredientModal\";\nimport EditIngredient from \"./EditIngredientModal\";\nimport { getCurrentRecipe } from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  specialsButton: {},\n\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n  ingredientsList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  card: {\n    width: 500,\n    height: 150,\n    alignSelf: \"center\",\n    marginTop: 20,\n    display: \"flex\",\n    backgroundColor: \"#F0F0F0\",\n  },\n}));\n\nfunction Ingredients() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentIngredient, setCurrentIngredient] = useState({});\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(getCurrentRecipe(recipeId));\n  }, []);\n\n  //grad the current ingredient from redux\n  const ingredients = useSelector(\n    (state) => state.recipes.currentRecipe.ingredients\n  );\n\n  //open the add new ingredient modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  //close the add new ingredient modal\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  //close the edit ingredient modal\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n\n  //open the edit ingredient modal and set the current ingredient click to state\n  const handleClickEditOpen = (tile) => {\n    setCurrentIngredient(tile);\n    setOpenForEdit(true);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Recipe List\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Ingredient\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddIngredient open={open} onClose={handleClose} />\n      <EditIngredient\n        currentIngredient={currentIngredient}\n        open={openForEdit}\n        onClose={handleEditClose}\n      />\n      <div className={classes.ingredientsList}>\n        {ingredients.map((tile, index) => (\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {tile.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Measurement: {tile.measurement}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Amount: {tile.amount}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions disableSpacing>\n              <Button\n                onClick={() => handleClickEditOpen(tile)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                Edit\n              </Button>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Ingredients;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextareaAutosize,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  makeStyles,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport { addNewDirection, saveCurrentRecipe } from \"../actions/recipes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Close } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n  addRecipeButton: {\n    marginLeft: 40,\n    position: \"absolute\",\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction AddDirection(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [optional, setOptional] = useState(false);\n  const [instruction, setInstruction] = useState(\"\");\n  const dispatch = useDispatch();\n  const [openOptions, setOptionsOpen] = React.useState(false);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  //close options modal\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n\n  //add direction to state and save the current recipe\n  function addDirection() {\n    const newDirection = {\n      instructions: instruction,\n      optional,\n    };\n\n    dispatch(addNewDirection(newDirection));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"add-direction\"\n      open={open}\n    >\n      <DialogTitle id=\"add-direction\">\n        <Typography variant=\"h6\"> Add Direction </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"instruction\">Instruction</InputLabel>\n          <TextareaAutosize\n            rowsMax={4}\n            aria-label=\"instruction\"\n            placeholder=\"Enter an instruction\"\n            className=\"instruction-text-area\"\n            onChange={handleInstructionChange}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <FormControl className=\"optionalFormControl\">\n            <InputLabel className=\"optional\" id=\"optional\">\n              Optional\n            </InputLabel>\n            <Select\n              labelId=\"optional\"\n              id=\"demo-controlled-open-select\"\n              className=\"optionalLabel\"\n              open={openOptions}\n              onClose={handleOptionsClose}\n              onOpen={handleOptionsOpen}\n              onChange={handleOptionsChange}\n            >\n              <MenuItem value={false}>\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={true}>Yes</MenuItem>\n              <MenuItem value={false}>No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={addDirection}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Direction\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddDirection;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  TextareaAutosize,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  makeStyles,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport { saveCurrentRecipe, updateDirection } from \"../actions/recipes\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 90,\n    marginTop: 50,\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction EditDirection(props) {\n  const classes = useStyles();\n  const { onClose, open, currentDirection, index } = props;\n  const dispatch = useDispatch();\n  const [openOptions, setOptionsOpen] = React.useState(false);\n  const [instruction, setInstruction] = useState(currentDirection.instructions);\n  const [optional, setOptional] = useState(currentDirection.optional);\n\n  useEffect(\n    () => {\n      //set driection information to state\n      setInstruction(currentDirection.instructions);\n      setOptional(currentDirection.optional);\n    },\n    [currentDirection.instruction, currentDirection.optional],\n    index\n  );\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  function editItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //creating a new direction\n    const newDirection = {\n      instructions: instruction,\n      optional: optional,\n    };\n\n    dispatch(updateDirection(newDirection, index));\n    dispatch(saveCurrentRecipe());\n\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-direction\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-direction\">\n        <Typography variant=\"h6\"> Edit Direction </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"instruction\">Instruction</InputLabel>\n          <TextareaAutosize\n            rowsMax={4}\n            aria-label=\"instruction\"\n            placeholder=\"Enter an instruction\"\n            className=\"instruction-text-area\"\n            onChange={handleInstructionChange}\n            value={instruction}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <FormControl className=\"optionalFormControl\">\n            <InputLabel className=\"optional\" id=\"optional\">\n              Optional\n            </InputLabel>\n            <Select\n              labelId=\"optional\"\n              id=\"demo-controlled-open-select\"\n              className=\"optionalLabel\"\n              open={openOptions}\n              onClose={handleOptionsClose}\n              onOpen={handleOptionsOpen}\n              onChange={handleOptionsChange}\n              value={optional}\n            >\n              <MenuItem value={false}>\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={true}>Yes</MenuItem>\n              <MenuItem value={false}>No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Edit Direction\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditDirection;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport {\n  AppBar,\n  makeStyles,\n  Toolbar,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  CardActionArea,\n} from \"@material-ui/core/\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getCurrentRecipe } from \"../actions/recipes\";\nimport AddDirection from \"./AddDirectionModal\";\nimport EditDirection from \"./EditDirectionModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  specialsButton: {},\n  addRecipeButton: {\n    left: 10,\n  },\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n  directionsList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n  card: {\n    width: 500,\n    height: 150,\n    alignSelf: \"center\",\n    marginTop: 20,\n    display: \"flex\",\n    backgroundColor: \"#F0F0F0\",\n  },\n  directionsInstruction: {\n    fontSize: 20,\n  },\n  directionsOptional: {\n    fontSize: 18,\n  },\n}));\n\nfunction Directions() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentDirection, setCurrentDirection] = useState({});\n  const [currentDirectionIndex, setCurrentDirectionIndex] = useState(0);\n  const classes = useStyles();\n\n  //get current recipe by uuid in params\n  useEffect(() => {\n    dispatch(getCurrentRecipe(recipeId));\n  }, [dispatch, recipeId]);\n\n  const directions = useSelector(\n    (state) => state.recipes.currentRecipe.directions\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n\n  //push current recipe to state to prefill form\n  const handleClickEditOpen = (tile, index) => {\n    setCurrentDirection(tile);\n\n    setCurrentDirectionIndex(index);\n    setOpenForEdit(true);\n  };\n\n  //change option to show yes or no\n  function changeOptionToString(value) {\n    if (!value || value === \"No\") {\n      return \"No\";\n    } else {\n      return \"Yes\";\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Directions\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Direction\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddDirection open={open} onClose={handleClose} />\n      <EditDirection\n        currentDirection={currentDirection}\n        open={openForEdit}\n        index={currentDirectionIndex}\n        onClose={handleEditClose}\n      />\n      <div className={classes.directionsList}>\n        {directions.map((tile, index) => (\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardContent>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"div\"\n                  className=\"text-center\"\n                >\n                  <span className={classes.directionsInstruction}>\n                    {tile.instruction}\n                  </span>\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  component=\"div\"\n                  className=\"text-center\"\n                >\n                  <span className={classes.directionsOptional}>\n                    {\" \"}\n                    Optional: {changeOptionToString(tile.optional)}\n                  </span>\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions disableSpacing>\n              <Button\n                onClick={() => handleClickEditOpen(tile, index)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                Edit\n              </Button>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Directions;\n","import { mockRecipes } from \"./../mockData/recipes\";\nexport const GET_SPECIALS_SUCCESS = \"GET_SPECIALS_SUCCESS\";\n\nexport function getSpecials() {\n  return getSpecialsSuccess(mockRecipes.specials);\n\n  // return function (dispatch) {\n  //   return axios.get(\"http://localhost:3001/specials\").then(({ data }) => {\n  //     dispatch(getSpecialsSuccess(data));\n  //   });\n  // };\n}\n\nfunction getSpecialsSuccess(specials) {\n  return {\n    type: GET_SPECIALS_SUCCESS,\n    specials,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getSpecials } from \"../actions/specials\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActionArea,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  specialsButton: {},\n\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n\n  card: {\n    width: 500,\n    height: 150,\n    alignSelf: \"center\",\n    marginTop: 20,\n    display: \"flex\",\n    backgroundColor: \"#F0F0F0\",\n  },\n  boldText: {\n    fontWeight: \"bold\",\n  },\n  specialsTitle: {},\n  specialsList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction Specials() {\n  const dispatch = useDispatch();\n  const specials = useSelector((state) => state.specials);\n  const history = useHistory();\n  const classes = useStyles();\n\n  //retrieve all the specials in database\n  useEffect(() => {\n    dispatch(getSpecials());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Specials\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.specialsList}>\n        {specials &&\n          specials.specialsList.map((tile, index) => (\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardContent>\n                  <Typography variant=\"h6\" className=\"text-center\">\n                    <span className=\"specials-title\">{tile.title}</span>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    className=\"text-center\"\n                  >\n                    <span classNane=\"specials-text\">{tile.text}</span>\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    className=\"text-center\"\n                  >\n                    <span className=\"specails-type\">\n                      <span className=\"bold-text\">type:</span> {tile.type}\n                    </span>\n                  </Typography>\n                  {tile.code && (\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      className=\"text-center\"\n                    >\n                      <span className=\"specials-code\">\n                        <span className=\"bold-text\">USE CODE:</span> {tile.code}\n                      </span>\n                    </Typography>\n                  )}\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Specials;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  TextareaAutosize,\n  Typography,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  Grid,\n  makeStyles,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addRecipe, postNewRecipe } from \"../actions/recipes\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n  imageTextField: {\n    width: \"75%\",\n  },\n}));\n\nfunction AddRecipe(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [measurement, setMeasurement] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [servings, setServings] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookTime, setCookTime] = useState(\"\");\n  const [optional, setOptional] = useState(\"\");\n  const [instruction, setInstruction] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [openOptions, setOptionsOpen] = useState(false);\n  const [ingredients, setIngredients] = useState([]);\n  const [directions, setDriections] = useState([]);\n\n  const handleClose = () => {\n    setIngredients([]);\n    setDriections([]);\n    onClose();\n  };\n\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleServingsChange = (e) => {\n    setServings(e.target.value);\n  };\n\n  const handlePrepTimeChange = (e) => {\n    setPrepTime(e.target.value);\n  };\n\n  const handleCookTimeChange = (e) => {\n    setCookTime(e.target.value);\n  };\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    setImage(e.target.value);\n  };\n\n  //open the options list\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n\n  //add Direction to a list before submitting\n  function addDirection() {\n    const arr = [...directions];\n    const formDirection = {};\n    formDirection[\"optional\"] = optional;\n    formDirection[\"instruction\"] = instruction;\n\n    if (optional === true) {\n      formDirection.optional = \"Yes\";\n    }\n    if (optional === false) {\n      formDirection.optional = \"No\";\n    }\n    arr.push(formDirection);\n    setDriections(arr);\n    setInstruction(\"\");\n    setOptional(\"\");\n  }\n\n  const dispatch = useDispatch();\n\n  //form for submitting a new recipe\n  function addFoodItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    const newRecipe = {\n      uuid: uuidv4(),\n      title: title,\n      description: description,\n      servings: servings,\n      cookTime: cookTime,\n      prepTime: prepTime,\n      ingredients: ingredients,\n      directions: directions,\n      postDate: dateAndTime,\n      images: { medium: image },\n    };\n\n    onClose();\n    setIngredients([]);\n    setDriections([]);\n    dispatch(addRecipe(newRecipe));\n  }\n\n  //create ingredients for recipe\n  function addIngredient(data) {\n    let arr = [...ingredients];\n    const formInstruction = {};\n    formInstruction[\"name\"] = name;\n    formInstruction[\"amount\"] = amount;\n    formInstruction[\"measurement\"] = measurement;\n    formInstruction.uuid = uuidv4();\n\n    arr.push(formInstruction);\n    setIngredients(arr);\n    setName(\"\");\n    setAmount(0);\n    setMeasurement(\"\");\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"lg\"}\n      onClose={handleClose}\n      aria-labelledby=\"add-recipe\"\n      open={open}\n    >\n      <DialogTitle id=\"add-recipe\">\n        <Typography variant=\"h6\"> Add Recipe </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <Grid justify=\"center\" container spacing={12}>\n        <Grid container item xs={4} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Food definition</h6>\n            <div>\n              <TextField\n                id=\"title\"\n                label=\"The name of the food\"\n                placeholder=\"Enter a name\"\n                onChange={handleTitleChange}\n              />\n              <TextareaAutosize\n                rowsMax={4}\n                aria-label=\"description\"\n                placeholder=\"Enter a description\"\n                className=\"instruction-text-area\"\n                onChange={handleDescriptionChange}\n              />\n\n              <TextField\n                id=\"servings\"\n                label=\"Servings\"\n                type=\"number\"\n                placeholder=\"Enter the amount of servings\"\n                onChange={handleServingsChange}\n              />\n              <TextField\n                id=\"prepTime\"\n                type=\"number\"\n                label=\"Prep time (in mins)\"\n                placeholder=\"Enter the prep time\"\n                onChange={handlePrepTimeChange}\n              />\n              <TextField\n                id=\"cookTime\"\n                label=\"Cook time (in mins)\"\n                type=\"number\"\n                placeholder=\"Enter the cook time\"\n                onChange={handleCookTimeChange}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container item xs={4} spacing={1}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Ingredients definition</h6>\n            <div>\n              <TextField\n                id=\"name\"\n                label=\"Ingredient Name\"\n                placeholder=\"Enter the ingredient name\"\n                onChange={handleNameChange}\n                value={name}\n              />\n              <TextField\n                id=\"amount\"\n                label=\"Amount\"\n                placeholder=\"Enter the amount\"\n                inputProps={{\n                  step: 0.1,\n                }}\n                value={amount}\n                type=\"number\"\n                onChange={handleAmountChange}\n              />\n              <TextField\n                id=\"measurement\"\n                label=\"Measurement\"\n                placeholder=\"Enter the measurement\"\n                onChange={handleMeasurementChange}\n                value={measurement}\n              />\n              <Button\n                onClick={addIngredient}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Add Ingredient to List\n              </Button>\n            </div>\n          </form>\n          <ul>\n            {ingredients.map((item, index) => (\n              <li>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Name</span> {item.name}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Amount:</span> {item.amount}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Mesurement</span>{\" \"}\n                  {item.measurement}\n                </Typography>\n              </li>\n            ))}\n          </ul>\n        </Grid>\n        <Grid container item xs={4} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Direction definition</h6>\n            <div>\n              <TextareaAutosize\n                rowsMax={4}\n                aria-label=\"instruction\"\n                placeholder=\"Enter an instruction\"\n                className=\"instruction-text-area\"\n                onChange={handleInstructionChange}\n                value={instruction}\n              />\n              <FormControl className=\"optionalFormControl\">\n                <InputLabel\n                  className=\"optional\"\n                  id=\"demo-controlled-open-select-label\"\n                >\n                  Optional\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  className=\"optionalLabel\"\n                  open={openOptions}\n                  onClose={handleOptionsClose}\n                  onOpen={handleOptionsOpen}\n                  onChange={handleOptionsChange}\n                  value={optional}\n                >\n                  <MenuItem value={\"\"}>\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={true}>Yes</MenuItem>\n                  <MenuItem value={false}>No</MenuItem>\n                </Select>\n              </FormControl>\n              <Button\n                onClick={addDirection}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Add Direction to List\n              </Button>\n            </div>\n          </form>\n          <Box mb={15}>\n            <ul>\n              {directions.map((item, index) => (\n                <li>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\">\n                    <span className=\"bold-text\">Instruction</span>{\" \"}\n                    {item.instruction}\n                  </Typography>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\">\n                    <span className=\"bold-text\">Optional</span> {item.optional}\n                  </Typography>\n                </li>\n              ))}\n            </ul>\n          </Box>\n        </Grid>\n        <TextField\n          id=\"measurement\"\n          label=\"Image Url www.image.com\"\n          placeholder=\"Enter the measurement\"\n          onChange={handleImageChange}\n          className={classes.imageTextField}\n        />\n      </Grid>\n      <Box mb={3} ml={140} pb={30}>\n        <Button\n          onClick={addFoodItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Recipe\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddRecipe;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Box,\n  Grid,\n  Button,\n  TextField,\n  TextareaAutosize,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nimport { updateRecipe, saveCurrentRecipe } from \"../actions/recipes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { Close } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    paddingBottom: 40,\n    marginTop: 50,\n  },\n  title: {\n    margin: 0,\n    padding: \"0 0 10px 12px\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(2) + 2,\n    top: 12,\n    color: theme.palette.grey[500],\n  },\n}));\n\nfunction EditRecipe(props) {\n  const classes = useStyles();\n  const { onClose, open, currentRecipe } = props;\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(currentRecipe.title);\n  const [description, setDescription] = useState(currentRecipe.description);\n  const [servings, setServings] = useState(currentRecipe.servings);\n  const [prepTime, setPrepTime] = useState(currentRecipe.prepTime);\n  const [cookTime, setCookTime] = useState(currentRecipe.cookTime);\n  useEffect(() => {\n    //get set state to recipe data\n    setTitle(currentRecipe.title);\n    setDescription(currentRecipe.description);\n    setServings(currentRecipe.servings);\n    setPrepTime(currentRecipe.prepTime);\n    setCookTime(currentRecipe.cookTime);\n  }, [\n    currentRecipe.title,\n    currentRecipe.description,\n    currentRecipe.servings,\n    currentRecipe.prepTime,\n    currentRecipe.cookTime,\n  ]);\n\n  //close the add new recipe modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n  const handleServingsChange = (e) => {\n    setServings(e.target.value);\n  };\n  const handlePrepTimeChange = (e) => {\n    setPrepTime(e.target.value);\n  };\n\n  const handleCookTimeChange = (e) => {\n    setCookTime(e.target.value);\n  };\n\n  function editItem(form) {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //new recipe with form data\n    const newRecipe = {\n      uuid: currentRecipe.uuid,\n      title: title,\n      description: description,\n      servings: servings,\n      prepTime: prepTime,\n      cookTime: cookTime,\n      postDate: currentRecipe.postDate,\n      editDate: dateAndTime,\n      images: currentRecipe.images,\n      directions: currentRecipe.directions,\n      ingredients: currentRecipe.ingredients,\n    };\n\n    //dipatch recipe to update\n    dispatch(updateRecipe(newRecipe));\n    dispatch(saveCurrentRecipe());\n\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"sm\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-recipe\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-recipe\">\n        <Typography variant=\"h6\"> Edit Recipe </Typography>\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n          classes={{ root: classes.icon_padding }}\n        >\n          <Close />\n        </IconButton>\n      </DialogTitle>\n      <Grid justify=\"center\" container spacing={12}>\n        <Grid container item xs={6} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <div>\n              <InputLabel id=\"title\">Title of Food</InputLabel>\n              <TextField\n                id=\"title\"\n                placeholder=\"Enter a name\"\n                onChange={handleTitleChange}\n                value={title}\n              />\n              <InputLabel id=\"description\">Description</InputLabel>\n              <TextareaAutosize\n                id=\"description\"\n                rowsMax={4}\n                aria-label=\"description\"\n                placeholder=\"Enter a description\"\n                className=\"instruction-text-area\"\n                onChange={handleDescriptionChange}\n                value={description}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container item xs={6} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <div>\n              <InputLabel id=\"servings\">Servings</InputLabel>\n              <TextField\n                id=\"servings\"\n                type=\"number\"\n                placeholder=\"Enter the amount of servings\"\n                onChange={handleServingsChange}\n                value={servings}\n              />\n              <InputLabel id=\"prepTime\">Prep Time (in mins)</InputLabel>\n              <TextField\n                id=\"prepTime\"\n                type=\"number\"\n                placeholder=\"Enter the prep time\"\n                onChange={handlePrepTimeChange}\n                value={prepTime}\n              />\n              <InputLabel id=\"cookTime\">Cook Time (in mins)</InputLabel>\n              <TextField\n                id=\"cookTime\"\n                type=\"number\"\n                placeholder=\"Enter the cook time\"\n                onChange={handleCookTimeChange}\n                value={cookTime}\n              />\n            </div>\n          </form>\n        </Grid>\n      </Grid>\n      <Box mb={3} ml={50} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Finished Editing\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditRecipe;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./Home.css\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  CardActionArea,\n  Box,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import { getRecipes } from \"../actions\";\nimport AddRecipe from \"./AddRecipeModal\";\nimport EditRecipe from \"./EditRecipeModal\";\nimport { getRecipes, loadRecipes, resetRecipes } from \"../actions/recipes\";\nimport { mockRecipes } from \"../mockData/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  specialsButton: {},\n  addRecipeButton: {\n    left: 10,\n  },\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n    overflow: \"auto\",\n  },\n  recipesList: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    flexWrap: \"wrap\",\n  },\n  card: {\n    width: 345,\n    marginLeft: 5,\n    height: 580,\n    alignSelf: \"center\",\n  },\n  media: {\n    height: 250,\n    display: \"flex\",\n    top: 0,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const history = useHistory();\n  const recipes = useSelector((state) => state.recipes);\n\n  const [directions, setDirections] = useState({});\n  const [ingredients, setIngredients] = useState({});\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentRecipe, setCurrentRecipe] = useState({});\n\n  useEffect(() => {\n    //get recipes for state\n    if (!recipes) {\n      dispatch(loadRecipes(mockRecipes.recipes));\n    }\n  }, []);\n\n  //open new add new recipe\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  //open edit recipe modal\n  const handleClickEditOpen = (tile) => {\n    setCurrentRecipe(tile);\n    setOpenForEdit(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n  const dispatch = useDispatch();\n\n  const handleNavigateDirectionsClick = (foodItem) => {\n    history.push({\n      pathname: `/directions/${foodItem.uuid}`,\n    });\n  };\n\n  const handleNavigateIngredientsClick = (foodItem) => {\n    history.push({\n      pathname: `/ingredients/${foodItem.uuid}`,\n    });\n  };\n\n  const reset = () => {\n    dispatch(resetRecipes());\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Recipe List\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.addRecipeButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Recipe\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.addRecipeButton}\n              color=\"inherit\"\n              onClick={reset}\n            >\n              Reset Recipes\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddRecipe open={open} onClose={handleClose} />\n      <EditRecipe\n        currentRecipe={currentRecipe}\n        open={openForEdit}\n        onClose={handleEditClose}\n      />\n      <div className={classes.recipesList}>\n        {recipes.recipesList.map((tile, index) => (\n          <Card className={classes.card}>\n            <CardActionArea>\n              <div>\n                {tile.images && (\n                  <CardMedia\n                    className={classes.media}\n                    image={tile.images.medium}\n                    title=\"Paella dish\"\n                    component=\"img\"\n                  />\n                )}\n                {!tile.images && (\n                  <CardMedia\n                    className={classes.media}\n                    src={\n                      \"https://www.foodiesfeed.com/wp-content/uploads/2019/06/top-view-for-box-of-2-burgers-home-made.jpg\"\n                    }\n                    title=\"Paella dish\"\n                    component=\"img\"\n                  />\n                )}\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {tile.title}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    {tile.description}\n                  </Typography>\n                </CardContent>\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                    component=\"div\"\n                  >\n                    Servings: {tile.servings}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    gutterBottom\n                  >\n                    Prep time: {tile.prepTime}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    gutterBottom\n                  >\n                    Cook time: {tile.cookTime}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    gutterBottom\n                  >\n                    Posted: {tile.postDate}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"div\"\n                    gutterBottom\n                  >\n                    Edited: {tile.editDate}\n                  </Typography>\n                </CardContent>\n              </div>\n            </CardActionArea>\n            <CardActions disableSpacing>\n              <Button\n                onClick={() => handleNavigateDirectionsClick(tile)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                View Directions\n              </Button>\n              <Button\n                onClick={() => handleNavigateIngredientsClick(tile)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                View Ingredients\n              </Button>\n              <Button\n                onClick={() => handleClickEditOpen(tile)}\n                size=\"small\"\n                color=\"primary\"\n              >\n                Edit\n              </Button>\n            </CardActions>\n          </Card>\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import produce from \"immer\";\nimport {\n  GET_RECIPES_SUCCESS,\n  GET_CURRENT_RECIPE_SUCCESS,\n  UPDATE_INGREDIENT,\n  ADD_NEW_INGREDIENT,\n  UPDATE_DIRECTION,\n  ADD_NEW_DIRECTION,\n  UPDATE_RECIPE,\n  ADD_RECIPE,\n} from \"../actions/recipes\";\n\nconst initialState = {\n  recipesList: [],\n  currentRecipe: { ingredients: [], directions: [] },\n};\n\nconst recipesReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case GET_RECIPES_SUCCESS:\n        draft.recipesList = action.recipes;\n        draft.loading = false;\n        break;\n\n      case GET_CURRENT_RECIPE_SUCCESS:\n        draft.currentRecipe = action.recipe;\n        draft.loading = false;\n        break;\n\n      case UPDATE_RECIPE:\n        const recipeIndex = draft.recipesList.findIndex(\n          (recipe) => recipe.uuid === action.recipe.uuid\n        );\n        draft.recipesList[recipeIndex] = action.recipe;\n        draft.currentRecipe = action.recipe;\n        break;\n\n      case UPDATE_INGREDIENT:\n        const ingredientIndex = draft.currentRecipe.ingredients.findIndex(\n          (ingredient) => ingredient.uuid === action.ingredient.uuid\n        );\n\n        draft.currentRecipe.ingredients[ingredientIndex] = action.ingredient;\n        const updateIngredientsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[updateIngredientsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_NEW_INGREDIENT:\n        draft.currentRecipe.ingredients.push(action.ingredient);\n        const newIngredientsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[newIngredientsIndex] = draft.currentRecipe;\n        break;\n\n      case UPDATE_DIRECTION:\n        const directionIndex = action.directionIndex;\n\n        draft.currentRecipe.directions[directionIndex] = action.direction;\n        const updateDirectionsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[updateDirectionsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_NEW_DIRECTION:\n        draft.currentRecipe.directions.push(action.direction);\n        const newDirectionsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[newDirectionsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_RECIPE:\n        draft.recipesList.push(action.recipe);\n\n        break;\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default recipesReducer;\n","import produce from \"immer\";\nimport { GET_SPECIALS_SUCCESS } from \"../actions/specials\";\n\nconst initialState = {\n  specialsList: [],\n};\n\nconst specialsReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case GET_SPECIALS_SUCCESS:\n        draft.specialsList = action.specials;\n        break;\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default specialsReducer;\n","import { combineReducers } from \"redux\";\n// import ingredients from \"./ingredients\";\nimport recipes from \"./recipes\";\nimport specials from \"./specials\";\n\n// Combine all the reducers\nconst rootReducer = combineReducers({\n  recipes,\n  specials,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducers from \"../reducers\"; //Import the reducer\nimport { createLogger } from \"redux-logger\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst rLogger = createLogger();\nconst persistedReducer = persistReducer(persistConfig, reducers);\n// Connect our store to the reducers\n//export default ( createStore(reducers, applyMiddleware(rLogger, thunk))\n\nexport const store = createStore(\n  persistedReducer,\n  applyMiddleware(rLogger, thunk)\n);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Ingredients from \"./components/IngredientsPage\";\nimport Directions from \"./components/DirectionsPage\";\nimport Specials from \"./components/SpecialsPage\";\n\nimport Home from \"./components/Home\";\nimport { store, persistor } from \"./state/store\";\n//import persistor from \"../state/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/ingredients/:recipeId\" component={Ingredients} />\n          <Route exact path=\"/directions/:recipeId\" component={Directions} />\n          <Route exact path=\"/specials\" component={Specials} />\n        </Switch>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}